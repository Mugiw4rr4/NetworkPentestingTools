#!/usr/bin/env python3
import optparse
import subprocess
import re
def mac_changer(interface,newMAC):
        print('[+] Changing the Mac address of ' + interface + ' to ' + newMAC)
        # code secured from hijacking
        subprocess.run(['ifconfig',interface,'down'])
        subprocess.run(['ifconfig',interface,'hw','ether',newMAC])
        subprocess.run(['ifconfig',interface,'up'])

def get_args():
    parser = optparse.OptionParser()
    interface = ''
    newMAC = ''
    parser.add_option("-i","--interface",dest="interface",help = 'interface that you want to change its MAC address')
    parser.add_option("-n","--newMAC",dest="newMAC",help = 'the new MAC address to give to this network interface')
    (options,arguments) = parser.parse_args()
    if not options.interface :
        parser.error("[-] You should specifiy the interface")
    elif not options.newMAC:
        parser.error("You should specifiy the new MAC address")
    return options

def get_current_mac(interface):
	result = subprocess.check_output('ifconfig '+ options.interface,shell=True)
	result = result.decode('UTF-8')
	macAddressResult = re.search(r'\w\w:\w\w:\w\w:\w\w:\w\w:\w\w',result)
	return macAddressResult.group(0)

print('********** MAC changer v5 ************')

options = get_args()
current_mac = get_current_mac(options.interface)
print('[+] Current mac address : ' + str(current_mac))
mac_changer(options.interface,options.newMAC)
macAddressResult = get_current_mac(options.interface)
if(macAddressResult):	
	if(macAddressResult == options.newMAC):
		print('The mac address of ' + options.interface +' has been modified successfuly to ' + macAddressResult)
	else:
		print('Error in modifying the mac address')
else:
	print('this interface has not even a mac address to be changed x)')
